*, *::before, *::after 
{
    box-sizing: border-box;
}

// Zero out margins, padding etc... and setup font defaults
body
{
    background-color: var(--sv-backcolor);
    color: var(--sv-forecolor);
    font-family: var(--sv-font-family);
    font-size: 1rem;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}   

// Section should be used to wrap content and puts padding
// and removed top/bottom margin on contained elements
section
{
    padding: 1rem;

    // Avoid section padding and child margins at top/bottom
    > :first-child { margin-top: 0; }
    > :last-child { margin-bottom: 0; }
}


// Default colors
:root
{
    // The default class color is 'secondary'
    --sv-class-color: var(--sv-secondary); 
    --sv-class-color-rgb: var(--sv-secondary-rgb);

    // The 'hot' color is the color for selected checkboxes and radio buttons
    // By default its the primary color, but the class colors below override this.
    --sv-hot-color: var(--sv-primary); 
    --sv-hot-color-rgb: var(--sv-primary-rgb);

    // Default container color
    --sv-class-containercolor: var(--sv-secondary);

    // Default popover colors
    --sv-popover-backcolor: var(--sv-dark);
    --sv-popover-forecolor: var(--sv-forecolor);
    --sv-popover-titlecolor: var(--sv-secondary);

    // Default menu colors
    --sv-menu-backcolor: var(--sv-backcolor);
    --sv-menu-forecolor: var(--sv-forecolor);

    // Default dialog colors
    --sv-dialog-backcolor: var(--sv-dark);
    --sv-dialog-forecolor: var(--sv-forecolor);
    --sv-dialog-inner-bordercolor: var(--sv-secondary);
}


// class colors
.primary { --sv-class-color: var(--sv-primary); --sv-class-color-rgb: var(--sv-primary-rgb); --sv-hot-color: var(--sv-primary); --sv-hot-color-rgb: var(--sv-primary-rgb); }
.secondary { --sv-class-color: var(--sv-secondary); --sv-class-color-rgb: var(--sv-secondary-rgb); --sv-hot-color: var(--sv-secondary); --sv-hot-color-rgb: var(--sv-secondary-rgb); }
.success { --sv-class-color: var(--sv-success); --sv-class-color-rgb: var(--sv-success-rgb); --sv-hot-color: var(--sv-success); --sv-hot-color-rgb: var(--sv-success-rgb); }
.info { --sv-class-color: var(--sv-info); --sv-class-color-rgb: var(--sv-info-rgb); --sv-hot-color: var(--sv-info); --sv-hot-color-rgb: var(--sv-info-rgb); }
.warning { --sv-class-color: var(--sv-warning); --sv-class-color-rgb: var(--sv-warning-rgb); --sv-hot-color: var(--sv-warning); --sv-hot-color-rgb: var(--sv-warning-rgb); }
.danger { --sv-class-color: var(--sv-danger); --sv-class-color-rgb: var(--sv-danger-rgb); --sv-hot-color: var(--sv-danger); --sv-hot-color-rgb: var(--sv-danger-rgb); }
.light { --sv-class-color: var(--sv-light); --sv-class-color-rgb: var(--sv-light-rgb); --sv-hot-color: var(--sv-light); --sv-hot-color-rgb: var(--sv-light-rgb); }
.dark { --sv-class-color: var(--sv-dark); --sv-class-color-rgb: var(--sv-dark-rgb); --sv-hot-color: var(--sv-dark); --sv-hot-color-rgb: var(--sv-dark-rgb); }

// text colors
.text-primary { color: var(--sv-primary); }
.text-secondary { color: var(--sv-secondary); }
.text-success { color: var(--sv-success); }
.text-info { color: var(--sv-info); }
.text-warning { color: var(--sv-warning); }
.text-danger { color: var(--sv-danger); }
.text-light { color: var(--sv-light); }
.text-dark { color: var(--sv-dark); }

// container colors
.container-primary { --sv-class-containercolor: var(--sv-primary); --sv-class-containercolor-rgb: var(--sv-primary-rgb); }
.container-secondary { --sv-class-containercolor: var(--sv-secondary); --sv-class-containercolor-rgb: var(--sv-secondary-rgb); }
.container-success { --sv-class-containercolor: var(--sv-success); --sv-class-containercolor-rgb: var(--sv-success-rgb); }
.container-info { --sv-class-containercolor: var(--sv-info); --sv-class-containercolor-rgb: var(--sv-info-rgb); }
.container-warning { --sv-class-containercolor: var(--sv-warning); --sv-class-containercolor-rgb: var(--sv-warning-rgb); }
.container-danger { --sv-class-containercolor: var(--sv-danger); --sv-class-containercolor-rgb: var(--sv-danger-rgb); }
.container-light { --sv-class-containercolor: var(--sv-light); --sv-class-containercolor-rgb: var(--sv-light-rgb); }
.container-dark { --sv-class-containercolor: var(--sv-dark); --sv-class-containercolor-rgb: var(--sv-dark-rgb); }

// Text input
input[type="text"]
{
    padding: .575rem .75rem;
    background-color: var(--sv-input-backcolor);
    color: var(--sv-input-forecolor);
    border-width: 1px;
    border-radius: 5px;
    border-style: solid;
    border-color: var(--sv-class-color);
    font-size: 1rem;
    line-height: 1rem;
    outline: none;

    &::selection 
    {
        background: var(--sv-primary);
        color: var(--sv-class-altcolor);
    }
      
    &:focus-visible:not(:disabled)
    {
        outline: none;
        box-shadow: ~'0 0 0 0.25rem rgba(var(--sv-class-color-rgb), .5)';
    }

    &::placeholder
    {
        color: rgba(var(--sv-input-forecolor-rgb), 0.33);
    }
    
}

// Base style for button looking things
.button-base-style()
{
    background-color: var(--sv-class-color);
    color: var(--sv-class-altcolor);
    padding: .575rem .75rem;
    border-width: 0;
    border-radius: 5px;
    border-style: solid;
    font-size: 1rem;
    line-height: 1rem;
}

// Button
.button, button
{
    .button-base-style();

    &.link 
    { 
        background-color: rgba(0,0,0,0); 
        color: var(--sv-link-color); 
        text-decoration: underline;
    }
    
    &:hover:not(:disabled)
    {
        background-color: ~'rgba(var(--sv-class-color-rgb), 0.8)';
    }

    &:active:not(:disabled)
    {
        background-color: ~'rgba(var(--sv-class-color-rgb), 0.6)';
    }    
    &:focus-visible
    {
        outline: none;
        box-shadow: ~'0 0 0 0.20rem rgba(var(--sv-class-color-rgb), .5)';
    }

    &:disabled
    {
        opacity: 0.5;
    }

    &.outline
    {
        color: var(--sv-class-color);
        background-color: rgba(0, 0, 0, 0);
        border-width: 1px;
        border-color: var(--sv-class-color);
        padding-top: ~'calc(0.575rem - 1px)';
        padding-bottom: ~'calc(0.575rem - 1px)';
        padding-left: ~'calc(0.75rem - 1px)';
        padding-right: ~'calc(0.75rem - 1px)';

        &:hover:not(:disabled)
        {
            color: var(--sv-class-altcolor);
            background-color: var(--sv-class-color);
        }
        &:active:not(:disabled)
        {
            background-color: ~'rgba(var(--sv-class-color-rgb), 0.6)';
        }    
    }

    &.small
    {
        font-size: 0.75rem;
        padding: .24rem .56rem;
        border-radius: 3px;
    }

    &.large
    {
        font-size: 1.2rem;
        padding: .7rem .9rem;
        border-radius: 6px;
    }

    &.dropdown
    {
        &::after 
        { 
            content: "  \23f7"; 
        }
    }

    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

// Control group combines <buttons> and <spans> into what looks
// like a single control.  Used to create button groups and adorned
// text input fields
.control-group
{
    position: relative;
    display: inline-flex;
    vertical-align: middle;

    span
    {
        .button-base-style();
    }

    :first-child,
    label:first-of-type
    {
        border-top-right-radius: 0px;
        border-bottom-right-radius: 0px;
    }
    input[type="checkbox"]:checked + label.outline,
    button:not(:first-child)
    {
        background-clip: padding-box;
        border-left-color: rgba(0,0,0,0);
        border-left-width: 1px;
    }
    label:first-of-type
    {
        border-left-width:1px;
    }
    :last-child
    {
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
    }
    :not(:first-child):not(:last-child):not(label:first-of-type)
    {
        border-radius: 0px;
    }

    input[type="checkbox"],
    input[type="radio"]
    {
        position: absolute;
        clip: rect(0, 0, 0, 0);
        pointer-events: none;
        & + label
        {
            margin-right: 0;
        }
    }

    input[type="checkbox"] + label.outline:hover
    {
        background-color: rgba(0,0,0,0);
        color: var(--sv-class-color);
    }

    input[type="checkbox"]:checked + label.outline,
    input[type="radio"]:checked + label.outline,
    input[type="radio"]:checked + label.outline:hover
    {
        background-color: var(--sv-class-color);
        color: var(--sv-class-altcolor);
    }

    input[type="checkbox"]:focus-visible:not(:disabled) + label,
    input[type="radio"]:focus-visible:not(:disabled) + label
    {
        outline: none;
        box-shadow: ~'0 0 0 0.25rem rgba(var(--sv-class-color-rgb), .5)';
    }

}

// Standard checkbox/radio button
input[type="checkbox"],
input[type="radio"]
{
    appearance: none;
    outline: none;
    display: inline-block;
    height: 1rem;
    width: 1rem;

    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid white;
    background: white;
    transform: translateY(3px);
    margin-right: 5px;
    
    transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;

    &:checked
    {
        background-color: var(--sv-hot-color);
        border-color: var(--sv-hot-color);
    }

    &:disabled
    {
        background-color: var(--sv-disabled-color);
        border-color: var(--sv-disabled-color);
    }

    & + label
    {
        margin-right: 1rem;     // A bit of space to the right for when stacked horizontally
        padding-top:.05em;      // Make label vertically taller so easier to click)
        padding-bottom:.05rem;
    }

    &:disabled + label
    {
        color: var(--sv-disabled-color);
    }

    &:focus-visible + label,
    &:focus-visible + label
    {
        outline: none;
        border-radius: 3px;
        box-shadow: ~'0 0 0 1px var(--sv-hot-color)';
    }

}

// Standard checkbox
input[type="checkbox"]
{
    border-radius: 3px;
    &:checked
    {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
    }
}

// Standard radio button
input[type="radio"]
{
    border-radius: 10px;
    &:checked
    {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
    }
}

// Switch
input.switch[type="checkbox"]
{
    width:30px;
    border-radius:10px;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280, 0, 0, 0.25%29'/%3e%3c/svg%3e");
    background-position: left center;
    background-repeat: no-repeat;
    transition: background-position 0.15s ease-in-out;

    &:checked
    {
        background-position: right center;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
    }
    &:disabled
    {
        background-image: none;
    }
}

// Mixin to put a close button at the top right
.close-button-top-right()
{
    position: absolute;
    top: 0;
    right: 0;
    width: 1em;
    height: 1em;
    padding: 1.7em;
    background: transparent url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e") center/1em auto no-repeat;
    cursor: pointer;
    border: none;
}

// Alerts
div.alert
{
    background-color: var(--sv-class-color);
    color: var(--sv-class-altcolor);
    padding: 0.1rem 1rem;
    border-radius: .5rem;
    position: relative;

    button.close
    {
        .close-button-top-right()
    }
}

// Pills
span.pill
{
    background-color: var(--sv-class-color);
    color: var(--sv-class-altcolor);
    display:inline-block;
    padding: .15rem .65rem;
    border-radius: 1rem;
    font-size: .75em;
    font-weight: 700;
}

// dialogs
div.dialog
{
    max-width:640px;
    margin:0 auto;
    background-color: var(--sv-dialog-backcolor);
    color: var(--sv-dialog-forecolor);
    border-radius: 10px;
    border: 1px solid var(--sv-class-containercolor);
    position: relative;
    header
    {
        padding: 0.14rem 1rem;
        border-bottom: 1px solid var(--sv-dialog-inner-bordercolor);

        h1
        {
            font-size: 1.2rem;
        }

        button.close
        {
            .close-button-top-right()
        }
    }

    footer
    {
        padding: 0.5rem 1rem;
        text-align: right;
        border-top: 1px solid var(--sv-dialog-inner-bordercolor);
    }
}

// Hide scroll bar on body when modal is active
body.modal-active
{
    overflow: hidden;
}

// Frame to host a modal
div.modal-frame
{
    position:fixed;
    top:0;
    left:0;
    width:~"calc(100vw - 4rem)";
    height:100vh;
    display: none;
    padding: 2rem;
    z-index:50;

    &.modal-active
    {
        display:block;
    }
}

// Obstruct background when modal active
div.modal-backdrop
{
    position:fixed;
    top:0;
    left:0;
    width:100vw;
    height:100vh;
    background-color:black;
    opacity: 0.5;
    z-index: 49;
}

// Mixin to put a arrow on a popup
.popup-arrow(@color)
{
    &::after
    {
        position: absolute;
        content: "";
        width: 0;
        height: 0;
    }

    &[data-popper-placement^='top']::after
    {
        left: 50%;
        bottom: 0;
        transform: translate(-50%, 99%);
        border-left: 5px solid transparent;
        border-right: 5px solid transparent;
        border-top: 7px solid @color;
    }

    &[data-popper-placement^='bottom']::after
    {
        left: 50%;
        top: 0;
        transform: translate(-50%, -99%);
        border-left: 5px solid transparent;
        border-right: 5px solid transparent;
        border-bottom: 7px solid @color;
    }

    &[data-popper-placement^='right']::after
    {
        top: 50%;
        left: 0;
        transform: translate(-99%, -50%);
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        border-right: 7px solid @color;
    }
    &[data-popper-placement^='left']::after
    {
        top: 50%;
        right: 0;
        transform: translate(99%, -50%);
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        border-left: 7px solid @color;
    }
}

// Popovers
div.popover
{

    background-color: var(--sv-popover-backcolor);
    color: var(--sv-popover-forecolor);
    border-radius: 7px;
    border: 1px solid var(--sv-class-containercolor);
    position: relative;
    max-width: 300px;
    display:none;
    header
    {
        padding: 0.5rem 1rem;
        font-size: 1.1rem;
        font-weight: bold;
        background: var(--sv-popover-titlecolor);
        border-top-left-radius: 7px;
        border-top-right-radius: 7px;
    }

    .popup-arrow(var(--sv-class-containercolor))
}

// Show popover/tooltip
div.popover.show,
div.tooltip.show,
div.menu.show
{
    display:block;
    z-index: 10;
}

// Tool tip
div.tooltip
{
    background: var(--sv-popup-backcolor);
    color: var(--sv-popup-forecolor);
    padding: .2rem 0.4rem;
    border-radius: 4px;
    border: 1px solid var(--sv-class-containercolor);
    display: block;
    position: relative;
    max-width: 200px;
    text-align: center;
    display:none;

    .popup-arrow(var(--sv-popup-backcolor))
}

// Popovers
div.menu
{
    background-color: var(--sv-menu-backcolor);
    color: var(--sv-menu-forecolor);
    border-radius: 7px;
    border: 1px solid var(--sv-class-containercolor);
    position: relative;
    display:none;
    min-width: 120px;
    text-align: left;
    
    ul 
    { 
        margin:7px 0;
        list-style:none;
        padding: 0;
        
        li
        {
            a
            {
                text-decoration: none;
                display: block;
                color: var(--sv-class-altcolor);
                padding: .375rem .575rem;

                &:hover
                {
                    background-color: var(--sv-primary);
                }
            }
        }
    }
}


// Links
a
{
    color: var(--sv-link-color);

    &:hover
    {
        color: rgba(var(--sv-link-color-rgb), 0.8);
    }
}

// Headings
h1 { font-size: 2.5rem; }
h2 { font-size: 2rem; }
h3 { font-size: 1.75rem; }
h4 { font-size: 1.5rem; }
h5 { font-size: 1.25rem; }
h6 { font-size: 1rem; }

// font sizing
.small { font-size: 0.8em; }
.large { font-size: 1.2em; }
.muted { opacity: 0.5; }

// text alignment
.left { text-align: left; }
.center { text-align: center; }
.right { text-align: right; }

