*, *::before, *::after 
{
    box-sizing: border-box;
}

// Zero out margins, padding etc... and setup font defaults
body
{
    background-color: var(--fw-body-back-color);
    color: var(--fw-body-fore-color);
    font-family: var(--fw-font-family);
    font-size: 1rem;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}   

input, button
{
    font-family: var(--fw-font-family);
    font-size: 1rem;
}

// Section should be used to wrap content and puts padding
// and removed top/bottom margin on contained elements
section
{
    padding: 0 1rem;

}


// Default colors
:root
{
    // The normal class colors
    --fw-class-color: var(--fw-normal); 
    --fw-class-color-rgb: var(--fw-normal-rgb);
    --fw-class-contrast-color: var(--fw-normal-contrast); 
    --fw-class-contrast-color-rgb: var(--fw-normal-contrast-rgb);
    --fw-dialog-inner-border-color: var(--fw-dialog-border-color);
}

.make-class-colors(@x)
{
    --fw-class-color: ~"var(--fw-@{x})";
    --fw-class-color-rgb: ~"var(--fw-@{x}-rgb)";
    --fw-class-contrast-color: ~"var(--fw-@{x}-contrast)";
    --fw-class-contrast-color-rgb: ~"var(--fw-@{x}-contrast-rgb)";
    --fw-checked-fore-color: ~"var(--fw-@{x})";
    --fw-checked-fore-color-rgb: ~"var(--fw-@{x}-rgb)";
    --fw-checked-back-color: ~"var(--fw-@{x})";
    --fw-checked-back-color-rgb: ~"var(--fw-@{x}-rgb)";
}

// class colors
.primary { .make-class-colors('primary'); };
.success { .make-class-colors('success'); };
.info { .make-class-colors('info'); };
.warning { .make-class-colors('warning'); };
.danger { .make-class-colors('danger'); };

// text colors
.text-primary { color: var(--fw-primary); }
.text-success { color: var(--fw-success); }
.text-info { color: var(--fw-info); }
.text-warning { color: var(--fw-warning); }
.text-danger { color: var(--fw-danger); }

// dialog  colors
.dialog-primary { --fw-dialog-border-color: var(--fw-primary); }
.dialog-success { --fw-dialog-border-color: var(--fw-success); }
.dialog-info { --fw-dialog-border-color: var(--fw-info); }
.dialog-warning { --fw-dialog-border-color: var(--fw-warning); }
.dialog-danger { --fw-dialog-border-color: var(--fw-danger); }

// popover  colors
.popover-primary { --fw-popover-border-color: var(--fw-primary); }
.popover-success { --fw-popover-border-color: var(--fw-success); }
.popover-info { --fw-popover-border-color: var(--fw-info); }
.popover-warning { --fw-popover-border-color: var(--fw-warning); }
.popover-danger { --fw-popover-border-color: var(--fw-danger); }

// Text input
input[type="text"]
{
    padding: .575rem .75rem;
    background-color: var(--fw-input-back-color);
    color: var(--fw-input-fore-color);
    border-width: 1px;
    border-radius: 5px;
    border-style: solid;
    border-color: var(--fw-class-color);
    font-size: 1rem;
    line-height: 1rem;
    outline: none;
    padding: .575rem .75rem;


    &::selection 
    {
        background: var(--fw-primary);
        color: var(--fw-class-contrast-color);
    }
      
    &:focus-visible:not(:disabled)
    {
        outline: none;
        box-shadow: ~'0 0 0 0.25rem rgba(var(--fw-class-color-rgb), .5)';
    }

    &::placeholder
    {
        color: rgba(var(--fw-input-fore-color-rgb), 0.33);
    }
    
}

// Base style for button looking things
.button-base-style()
{
    display:inline-block;
    background-color: var(--fw-class-color);
    color: var(--fw-class-contrast-color);
    padding: .575rem .75rem;
    border-width: 0;
    border-radius: 5px;
    border-style: solid;
    font-size: 1rem;
    line-height: 1rem;
}

// Button
.button, button
{
    .button-base-style();

    &.link 
    { 
        background-color: rgba(0,0,0,0); 
        color: var(--fw-link-color); 
        text-decoration: underline;
    }
    
    &:hover:not(:disabled)
    {
        background-color: ~'rgba(var(--fw-class-color-rgb), 0.8)';
        color: var(--fw-class-contrast-color);
    }

    &:active:not(:disabled)
    {
        background-color: ~'rgba(var(--fw-class-color-rgb), 0.6)';
    }    
    &:focus-visible
    {
        outline: none;
        box-shadow: ~'0 0 0 0.20rem rgba(var(--fw-class-color-rgb), .5)';
    }

    &:disabled
    {
        opacity: 0.5;
    }

    &.transparent
    {
        background-color: rgba(0,0,0,0);
        color: var(--fw-body-fore-color);

        &:focus-visible:not(:active)
        {
            color: var(--fw-class-contrast-color);
            background-color: var(--fw-class-color);
        }
    }

    &.outline
    {
        color: var(--fw-body-fore-color);
        background-color: rgba(0, 0, 0, 0);
        border-width: 1px;
        border-color: var(--fw-class-color);
        padding-top: ~'calc(0.575rem - 1px)';
        padding-bottom: ~'calc(0.575rem - 1px)';
        padding-left: ~'calc(0.75rem - 1px)';
        padding-right: ~'calc(0.75rem - 1px)';

        &:hover:not(:disabled)
        {
            color: var(--fw-class-contrast-color);
            background-color: ~'rgba(var(--fw-class-color-rgb), 0.5)'
        }
        &:active:not(:disabled)
        {
            background-color: ~'rgba(var(--fw-class-color-rgb), 0.3)';
        }    
    }

    &.button-sm
    {
        font-size: 0.75rem;
        padding: .24rem .56rem;
        border-radius: 3px;
    }

    &.button-lg
    {
        font-size: 1.2rem;
        padding: .7rem .9rem;
        border-radius: 6px;
    }

    &.dropdown
    {
        &::after 
        { 
            content:'';
            display: inline-block;
            margin-left: 0.25em;
            vertical-align: .1em;
            border-top: 0.3em solid;
            border-right: 0.3em solid transparent;
            border-bottom: 0;
            border-left: 0.3em solid transparent;        
        }
    }

    // Same as above but no left margin so it looks nicer on its own
    &.dropdown-standalone
    {
        &::after 
        { 
            content:'';
            display: inline-block;
            vertical-align: .1em;
            border-top: 0.3em solid;
            border-right: 0.3em solid transparent;
            border-bottom: 0;
            border-left: 0.3em solid transparent;        
        }
    }

    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.check-button
{
    position: relative;
    display: inline-block;
    vertical-align: baseline;

    input[type="checkbox"]
    {
        position: absolute;
        clip: rect(0, 0, 0, 0);
        pointer-events: none;
        transform: none;
        & + label
        {
            margin-right: 0;
        }

    }

    input[type="checkbox"] + label
    {
        .button-base-style();
        background-color: transparent;
        color: var(--fw-body-fore-color);
        
        &:hover
        {
            background-color: rgba(var(--fw-normal-contrast-rgb), 0.05);
            color: var(--fw-normal-contrast);
        }
    
        &:active:not(:disabled)
        {
            background-color: ~'rgba(var(--fw-class-color-rgb), 0.6)';
        }    
    
        &:focus-visible
        {
            outline: none;
            box-shadow: ~'0 0 0 0.20rem rgba(var(--fw-class-color-rgb), .5)';
        }    
    }


    input[type="checkbox"]:checked + label
    {
        background-color: var(--fw-class-color);
        color: var(--fw-class-contrast-color);

    
    }

    input[type="checkbox"]:active + label
    {
        background-color: ~'rgba(var(--fw-class-color-rgb), 0.3)';
    }

    input[type="checkbox"]:focus-visible + label
    {
        outline: none;
        box-shadow: ~'0 0 0 0.25rem rgba(var(--fw-class-color-rgb), .5)';
    }

}


// Control group combines <buttons> and <spans> into what looks
// like a single control.  Used to create button groups and adorned
// text input fields
.control-group
{
    position: relative;
    display: inline-flex;
    vertical-align: baseline;

    span
    {
        .button-base-style();
    }

    span
    {
        border-top: 1px solid var(--fw-class-color);
        border-bottom: 1px solid var(--fw-class-color);
    }

    :first-child,
    label:first-of-type
    {
        border-top-right-radius: 0px;
        border-bottom-right-radius: 0px;
    }
    input[type="checkbox"]:checked + label.outline,
    button:not(:first-child)
    {
        background-clip: padding-box;
        border-left-color: rgba(0,0,0,0);
        border-left-width: 1px;
    }
    label:first-of-type
    {
        border-left-width:1px;
    }
    :last-child
    {
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
    }
    :not(:first-child):not(:last-child):not(label:first-of-type)
    {
        border-radius: 0px;
    }

    input[type="checkbox"],
    input[type="radio"]
    {
        position: absolute;
        clip: rect(0, 0, 0, 0);
        pointer-events: none;
        & + label
        {
            margin-right: 0;
        }
    }

    input[type="checkbox"]:checked + label.outline,
    input[type="radio"]:checked + label.outline,
    input[type="radio"]:checked + label.outline:hover
    {
        background-color: var(--fw-class-color);
        color: var(--fw-class-contrast-color);
    }

    input[type="checkbox"]:focus-visible:not(:disabled) + label,
    input[type="radio"]:focus-visible:not(:disabled) + label
    {
        outline: none;
        box-shadow: ~'0 0 0 0.25rem rgba(var(--fw-class-color-rgb), .5)';
    }

    input[type="text"]
    {
        margin: 0;
    }

}

// Standard checkbox/radio button
input[type="checkbox"],
input[type="radio"]
{
    appearance: none;
    outline: none;
    display: inline-block;
    height: 1rem;
    width: 1rem;

    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--fw-unchecked-fore-color);
    background: var(--fw-unchecked-back-color);
    transform: translateY(1px);
    margin-right: 5px;
    
    transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;

    &:checked
    {
        background-color: var(--fw-checked-back-color);
        border-color: var(--fw-checked-fore-color);
    }

    &:disabled
    {
        background-color: var(--fw-disabled-color);
        border-color: var(--fw-disabled-color);
    }

    & + label
    {
        margin-right: 1rem;     // A bit of space to the right for when stacked horizontally
        padding-top:.05em;      // Make label vertically taller so easier to click)
        padding-bottom:.05rem;
    }

    &:disabled + label
    {
        color: var(--fw-disabled-color);
    }

    &:focus-visible + label,
    &:focus-visible + label
    {
        outline: none;
        border-radius: 3px;
        box-shadow: ~'0 0 0 1px var(--fw-hot-color)';
    }

}

// Standard checkbox
input[type="checkbox"]
{
    border-radius: 3px;
    &:checked
    {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
    }
}

// Standard radio button
input[type="radio"]
{
    border-radius: 10px;
    &:checked
    {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
    }
}

// Switch
input.switch[type="checkbox"]
{
    width:30px;
    border-radius:10px;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280, 0, 0, 0.25%29'/%3e%3c/svg%3e");
    background-position: left center;
    background-repeat: no-repeat;
    transition: background-position 0.15s ease-in-out;

    &:checked
    {
        background-position: right center;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
    }
    &:disabled
    {
        background-image: none;
    }
}

fieldset
{
    border: none;
    padding: 0;
}

legend
{
    padding-inline-start: 0px;
    padding-inline-end: 0px;
}

// Mixin to put a close button at the top right
.close-button-top-right()
{
    position: absolute;
    top: 0;
    right: 0;
    width: 1em;
    height: 1em;
    padding: 1.7em;
    background: transparent url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e") center/1em auto no-repeat;
    cursor: pointer;
    border: none;
}

// Alerts
div.alert
{
    background-color: var(--fw-class-color);
    color: var(--fw-class-contrast-color);
    padding: 0.1rem 1rem;
    border-radius: .5rem;
    position: relative;

    button.close
    {
        .close-button-top-right()
    }
}

// Pills
span.pill
{
    background-color: var(--fw-class-color);
    color: var(--fw-class-contrast-color);
    display:inline-block;
    padding: .15rem .65rem;
    border-radius: 1rem;
    font-size: .75em;
    font-weight: 700;
}

// dialogs
div.dialog
{
    max-width: 600px;
    margin:0 auto;
    background-color: var(--fw-dialog-back-color);
    color: var(--fw-dialog-fore-color);
    border-radius: 10px;
    border: 1px solid var(--fw-dialog-border-color);
    position: relative;
    header
    {
        padding: 0.14rem 1rem;
        border-bottom: 1px solid var(--fw-dialog-inner-border-color);

        h1
        {
            font-size: 1.2rem;
        }

        button.close
        {
            .close-button-top-right()
        }
    }

    footer
    {
        padding: 0.5rem 1rem;
        text-align: right;
        border-top: 1px solid var(--fw-dialog-inner-border-color);
    }

    &.dialog-sm { max-width: 350px; }
    &.dialog-lg { max-width: 700px; }
    &.dialog-xl { max-width: 100%; }
}

// Hide scroll bar on body when modal is active
body.modal-active
{
    overflow: hidden;
}

// Frame to host a modal
div.modal-frame
{
    position:fixed;
    top:0;
    left:0;
    width:~"calc(100vw)";
    height:100vh;
    display: none;
    padding: 2rem;
    z-index:50;
    background:rgba(0,0,0,0.5);

    &.modal-active
    {
        display:block;
    }
}

.popover-arrow
{
    position: absolute;
    width: 0;
    height: 0;
}

.tooltip,
.popover 
{
    &[data-popper-placement^='top'] .popover-arrow
    {
        left: 50%;
        bottom: -7px;
        transform: translate(-50%, 99%);
        border-left: 5px solid transparent;
        border-right: 5px solid transparent;
        border-top: 7px solid var(--fw-popover-border-color);
    }

    &[data-popper-placement^='bottom'] .popover-arrow
    {
        left: 50%;
        top: -7px;
        transform: translate(-50%, -99%);
        border-left: 5px solid transparent;
        border-right: 5px solid transparent;
        border-bottom: 7px solid var(--fw-popover-border-color);
    }

    &[data-popper-placement^='right'] .popover-arrow
    {
        top: 50%;
        left: -7px;
        transform: translate(-99%, -50%);
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        border-right: 7px solid var(--fw-popover-border-color);
    }
    &[data-popper-placement^='left'] .popover-arrow
    {
        top: 50%;
        right: -7px;
        transform: translate(99%, -50%);
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        border-left: 7px solid var(--fw-popover-border-color);
    }
}

// Popovers
div.popover
{
    text-align: left;
    background-color: var(--fw-popover-back-color);
    color: var(--fw-popover-fore-color);
    border-radius: 7px;
    border: 1px solid var(--fw-popover-border-color);
    position: relative;
    max-width: 300px;
    display:none;
    header
    {
        padding: 0.5rem 1rem;
        font-size: 1.1rem;
        font-weight: bold;
        background: var(--fw-popover-header-color);
        border-top-left-radius: 7px;
        border-top-right-radius: 7px;
    }
}

// Show popover/tooltip
div.popover.show,
div.tooltip.show,
div.menu.show
{
    display:block;
    z-index: 10;
}

// Tool tip
div.tooltip
{
    background: var(--fw-popover-back-color);
    color: var(--fw-popover-fore-color);
    padding: .2rem 0.4rem;
    border-radius: 4px;
    border: 1px solid var(--fw-popover-border-color);
    display: block;
    position: relative;
    max-width: 200px;
    text-align: center;
    display:none;
}

// Menu
div.menu
{
    background-color: var(--fw-popover-back-color);
    color: var(--fw-popover-fore-color);
    border-radius: 7px;
    border: 1px solid var(--fw-popover-border-color);
    color: var(--fw-popover-fore-color);
    position: relative;
    display:none;
    min-width: 120px;
    text-align: left;
    
    ul 
    { 
        margin:7px 0;
        list-style:none;
        padding: 0;
        
        li
        {
            a
            {
                text-decoration: none;
                display: block;
                padding: .375rem .575rem;
                color: var(--fw-popover-fore-color);

                &:hover
                {
                    background-color: var(--fw-primary);
                    color: var(--fw-primary-contrast);
                }
            }
        }
    }
}

// Spinner
.spinner
{
    display:inline-block;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    border-width: 2px;
    border-color: var(--fw-class-color);
    border-style: solid;
    border-top-color: transparent;
    animation: spinner .75s linear infinite;
}

.spinner-xs
{
    width: 0.75rem;
    height: 0.75rem;
    border-width: 2px;
}

.spinner-sm
{
    width: 1rem;
    height: 1rem;
    border-width: 2px;
}

.spinner-lg
{
    width: 2.5rem;
    height: 2.5rem;
    border-width: 3.5px;
}

.spinner-xl
{
    width: 4rem;
    height: 4rem;
    border-width: 5.3px;
}


@keyframes spinner 
{
    to { transform: rotate(360deg); }
}
  

// Links
a
{
    color: var(--fw-link-color);

    &:hover
    {
        color: rgba(var(--fw-link-color-rgb), 0.8);
    }
}

// Headings
h1 { font-size: 2.5rem; }
h2 { font-size: 2rem; }
h3 { font-size: 1.75rem; }
h4 { font-size: 1.5rem; }
h5 { font-size: 1.25rem; }
h6 { font-size: 1rem; }

// font sizing
.muted { opacity: 0.5; }

// text alignment
.left { text-align: left; }
.center { text-align: center; }
.right { text-align: right; }
